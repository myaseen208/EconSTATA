bookdownplus(more_output = more_output())
devtools::install_github('haozhu233/kableExtra')
devtools::install_github('haozhu233/kableExtra')
devtools::install_github('haozhu233/kableExtra')
devtools::install_github('haozhu233/kableExtra')
devtools::install_github('haozhu233/kableExtra')
devtools::install_github('haozhu233/kableExtra')
installed.packages("lm.beta")
installed.packages("lm.beta")
install.packages("lm.beta")
getwd()
setwd("/media/yaseen/Documents/Muhammad_YaseenOld/Stat-711/LMwithR/Introduction to Linear Model/R Codes/Test")
bookdownplus()
library(bookdownplus)
bookdownplus()
library(bookdownplus)
library(bookdown)
?publish_book
publish_book(name = NULL, account = NULL, server = NULL, render = local")
)
""
publish_book(name = NULL, account = NULL, server = NULL, render = "local")
bookdown::publish_book(name = NULL, account = NULL, server = NULL, render = "local")
devtools::install_github("pzhaonet/bookdownplus")
devtools::install_github("pzhaonet/bookdownplus", force = TRUE)
update.packages(ask=F)
update.packages(ask=F)
library(bookdownplus)
?bookdownplus
library(bookdown)
?publish
?publish_book
cat(gsub(pattern=",", replacement="\n\t,", x=formatR:::usage(predict)))
?confint
Income      <- seq(from=80, to=260, by=20)
Consumption <- c(70, 65, 90, 95, 110, 115, 120, 118, 125, 128)
Gender      <- gl(n=2, k=5, length=2*5, label=c("Female", "Male"))
df6         <- data.frame(Income, Consumption, Gender)
df6
df6 %>%
group_by(Gender) %>%
summarise(mean = mean(Consumption), sd = sd(Consumption))
library(dplyr)
df6 %>%
group_by(Gender) %>%
summarise(mean = mean(Consumption), sd = sd(Consumption))
with(data = df6, tapply(X = Consumption, INDEX = Gender, FUN = mean))
with(data = df6, tapply(X = Consumption, INDEX = Gender, FUN = sd))
setwd("/media/yaseen/Documents/Muhammad_YaseenOld/Stat-711/LMwithR/LMwithR3")
library(bookdownplus
)
bookdownplus(more_output = more_output())
## ----Income.lm.fm1----
load("Income.RData")
# Income
str(Income)
Income.lm.fm1 <-
lm(
formula    = Income ~ Value + Education + Age + MortgagePayment
, data       = Income
# , subset
# , weights
# , na.action
, method      = "qr"
, model       = TRUE
, x           = FALSE
, y           = FALSE
, qr          = TRUE
, singular.ok = TRUE
, contrasts   = NULL
# , offset
# , ...
)
summary(Income.lm.fm1)
summary(Income.lm.fm1)$coef
## ----Income.sem.fm1----
library(lavaan)
## ----Income.sem.fm1----
library(lavaan)
Income.sem.m1 <- '
# Regressions
Income ~ Value + Education + Age + MortgagePayment
'
Income.sem.fm1 <-
lavaan::sem(
model            = Income.sem.m1
, data             = Income
, ordered          = NULL
, sampling.weights = NULL
, sample.cov       = NULL
, sample.mean      = NULL
, sample.nobs      = NULL
, group            = NULL
, cluster          = NULL
#  , constraints      = ""
, WLS.V            = NULL
, NACOV            = NULL
# ,   ...
)
## ----Income.lm.fm1----
load("Income.RData")
Income.sem.fm1 <-
lavaan::sem(
model            = Income.sem.m1
, data             = Income
, ordered          = NULL
, sampling.weights = NULL
, sample.cov       = NULL
, sample.mean      = NULL
, sample.nobs      = NULL
, group            = NULL
, cluster          = NULL
#  , constraints      = ""
, WLS.V            = NULL
, NACOV            = NULL
# ,   ...
)
parameterEstimates(Income.sem.fm1, standardized = TRUE)
coef(Income.sem.fm1)
residuals(Income.sem.fm1)
residuals(Income.sem.fm1, type = "cov")
residuals(Income.sem.fm1, type = "cor")
modificationIndices(Income.sem.fm1)
Income.sem.m2 <- '
# Regressions
Income ~ Value + Education + Age + MortgagePayment
# Variances and Covariances
Value     ~~  Education
Value     ~~  Age
Value     ~~ MortgagePayment
Education ~~  Age
Education ~~ MortgagePayment
Age       ~~ MortgagePayment
Income    ~~ Income
'
Income.sem.fm2 <-
lavaan::sem(
model            = Income.sem.m2
, data             = Income
, ordered          = NULL
, sampling.weights = NULL
, sample.cov       = NULL
, sample.mean      = NULL
, sample.nobs      = NULL
, group            = NULL
, cluster          = NULL
# , constraints      = ""
, WLS.V            = NULL
, NACOV            = NULL
# ,   ...
)
anova(Income.sem.fm2)
coef(Income.sem.fm2)
parameterEstimates(Income.sem.fm2, standardized = TRUE)
fitmeasures(Income.sem.fm2)
fitted(Income.sem.fm2)$cov
residuals(Income.sem.fm2, type = "cor")
modificationIndices(Income.sem.fm2)
var(Income)
vcov(Income.sem.fm2)
## ----HSF.sem.fm1----
library(lavaan)
load("HSF.RData")
# HSF
str(HSF)
HSF.sem.m1 <- '
# Latent Variables
Spatial =~ VisualPerc + Cubes + Lozenges
Verbal  =~ Paragrap + Sentence + WordMean
# Variances and Covariances
Spatial  ~~  Verbal
'
## ----Warren8V.sem.fm1----
library(lavaan)
Warren8v <-
matrix(
data =
c(
0.0271,	0.0172,	 0.0219,	0.0164,	 0.0284,	 0.0217,	0.0083,  0.0074,
0.0172,	0.0222,	 0.0193,	0.0130,	 0.0294,	 0.0185,	0.0011,  0.0015,
0.0219,	0.0193,	 0.0876,	0.0317,	 0.0383,	 0.0356, -0.0001,  0.0035,
0.0164,	0.0130,	 0.0317,	0.0568,	 0.0151,	 0.0230,	0.0055,  0.0089,
0.0284,	0.0294,	 0.0383,	0.0151,	 0.1826,	 0.0774, -0.0087,	-0.0007,
0.0217,	0.0185,	 0.0356,	0.0230,	 0.0774,	 0.1473, -0.0069,	-0.0088,
0.0083,	0.0011,	-0.0001,	0.0055,	-0.0087,	-0.0069,	0.1137,	 0.0722,
0.0074,	0.0015,	 0.0035,	0.0089,	-0.0007,	-0.0088,	0.0722,	 0.1024
)
, nrow  = 8
, ncol  = 8
, byrow = TRUE
, dimnames = list(c("Performance1",	"Performance2",
"Knowledge1",	"Knowledge2",
"Value1",	"Value2",
"Satisfaction1", "Satisfaction2")
, c("Performance1",	"Performance2",
"Knowledge1",	"Knowledge2",
"Value1",	"Value2",
"Satisfaction1", "Satisfaction2")
)
)
Warren8v
Warren8v.sem.m1 <- '
# Latent Variables
Performance  =~ Performance1 + Performance2
Knowledge    =~ Knowledge1 + Knowledge2
Value        =~ Value1 + Value2
Satisfaction =~ Satisfaction1 + Satisfaction2
# Regressions
Performance ~ Knowledge + Value + Satisfaction
# Variances and Covariances
Knowledge   ~~ Value
Knowledge   ~~ Satisfaction
Value       ~~ Satisfaction
Performance ~~ Performance
'
## ----Income.sem.fm3----
library(lavaan)
Income.sem.m3 <- '
# Regressions
Income    ~ Value + a * Education + b * Age + MortgagePayment
Education ~ c * Age
# Variances and Covariances
Value     ~~  Education
Value     ~~  Age
Value     ~~ MortgagePayment
Education ~~ MortgagePayment
Age       ~~ MortgagePayment
Income    ~~ Income
# Indirect Effects (b*c)
bc := b*c
# Total Effects
Total := a + (b*c)
'
anova(Income.sem.fm3)
library(knitr)
?fig.pos
?knit
## ----Income.lm.fm1----
load("Income.RData")
# Income
str(Income)
Income.lm.fm1 <-
lm(
formula    = Income ~ Value + Education + Age + MortgagePayment
, data       = Income
# , subset
# , weights
# , na.action
, method      = "qr"
, model       = TRUE
, x           = FALSE
, y           = FALSE
, qr          = TRUE
, singular.ok = TRUE
, contrasts   = NULL
# , offset
# , ...
)
summary(Income.lm.fm1)
summary(Income.lm.fm1)$coef
## ----Income.sem.fm1----
library(lavaan)
Income.sem.m1 <- '
# Regressions
Income ~ Value + Education + Age + MortgagePayment
'
Income.sem.fm1 <-
lavaan::sem(
model            = Income.sem.m1
, data             = Income
, ordered          = NULL
, sampling.weights = NULL
, sample.cov       = NULL
, sample.mean      = NULL
, sample.nobs      = NULL
, group            = NULL
, cluster          = NULL
# , constraints      = ""
, WLS.V            = NULL
, NACOV            = NULL
# ,   ...
)
# anova(Income.sem.fm1)
# coef(Income.sem.fm1)
parameterEstimates(Income.sem.fm1, standardized = TRUE)
# fitmeasures(Income.sem.fm1)
fitted(Income.sem.fm1)$cov
# residuals(Income.sem.fm1, type = "cor")
# modificationIndices(Income.sem.fm1)
var(Income)
corr(Income)
cor(Income)
# anova(Income.sem.fm1)
# coef(Income.sem.fm1)
parameterEstimates(Income.sem.fm1, standardized = TRUE)
cor(Income)
library(lavaan)
?lavaan
library(lavaan)
model <- '
# latent variable definitions
ind60 =~ x1 + x2 + x3
dem60 =~ y1 + a*y2 + b*y3 + c*y4
dem65 =~ y5 + a*y6 + b*y7 + c*y8
# regressions
dem60 ~ ind60
dem65 ~ ind60 + dem60
# residual correlations
y1 ~~ y5
y2 ~~ y4 + y6
y3 ~~ y7
y4 ~~ y8
y6 ~~ y8
'
dev_mode()
library(semPlot)
library(semPlot)
fit <- sem(model, data=PoliticalDemocracy)
semPaths(fit,whatLabels="est",style="lisrel",
residuals=TRUE)
?semPaths
getwd()
## ----Income.lm.fm1----
load("Income.RData")
# Income
str(Income)
Income.lm.fm1 <-
lm(
formula    = Income ~ Value + Education + Age +
MortgagePayment
, data       = Income
# , subset
# , weights
# , na.action
, method      = "qr"
, model       = TRUE
, x           = FALSE
, y           = FALSE
, qr          = TRUE
, singular.ok = TRUE
, contrasts   = NULL
# , offset
# , ...
)
summary(Income.lm.fm1)
summary(Income.lm.fm1)$coef
## ----Income.sem.fm1----
library(lavaan)
Income.sem.m1 <- '
# Regressions
Income ~ gamma1 * Value + gamma2 * Education +
gamma3 * Age   + gamma4 * MortgagePayment
'
Income.sem.fm1 <-
lavaan::sem(
model            = Income.sem.m1
, data             = Income
, ordered          = NULL
, sampling.weights = NULL
, sample.cov       = NULL
, sample.mean      = NULL
, sample.nobs      = NULL
, group            = NULL
, cluster          = NULL
# , constraints      = ""
, WLS.V            = NULL
, NACOV            = NULL
# ,   ...
)
# anova(Income.sem.fm1)
# coef(Income.sem.fm1)
parameterEstimates(Income.sem.fm1, standardized = TRUE)
# fitmeasures(Income.sem.fm1)
fitted(Income.sem.fm1)$cov
# residuals(Income.sem.fm1, type = "cor")
# modificationIndices(Income.sem.fm1)
var(Income)
cor(Income)
# vcov(Income.sem.fm1)
summary(
object       = Income.sem.fm1
, header       = TRUE
, fit.measures = FALSE
, estimates    = TRUE
, ci           = FALSE
, fmi          = FALSE
, standardized = TRUE
, rsquare      = TRUE
, std.nox      = FALSE
, modindices   = FALSE
, nd           = 3L
)
library(semPlot)
cat(gsub(pattern=",", replacement="\n\t,", x=formatR:::usage(semPaths)))
semPaths(
object     = Income.sem.fm1
, whatLabels = "est"
, style      = "lisrel"
, residuals = TRUE
)
semPaths(
object     = Income.sem.fm1
, whatLabels = "est"
, style      = "lisrel"
, residuals = TRUE
)
citation("semPlot")
install.packages("bookdownplus")
install.packages("lawan")
install.packages("lavaan")
install.packages("tinytex")
knitr::opts_chunk$set(
fig.align  = 'center'
, out.width  = '80%'
, fig.asp    = 0.75
, fig.pos    = 'H'
, echo       = TRUE
, results    = 'markup'
, warning    = FALSE
, message    = FALSE
, comment    = NA
)
options(replace.assign = TRUE, width = 65)
par(mar = c(4, 4, .1, .1))
library(knitr)
statapath <- "D:/Stata15/Stata-64"
opts_chunk$set(engine="stata", engine.path=statapath, comment="")
use hprice2a.dta
use hprice2a.dta
install_github("hemken/Statamarkdown")
remotes::install_github("hemken/Statamarkdown")
devtools::install_github("hemken/Statamarkdown")
install.packages("devtools")
devtools::install_github("hemken/Statamarkdown")
